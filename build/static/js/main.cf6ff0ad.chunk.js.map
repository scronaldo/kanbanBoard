{"version":3,"sources":["actions/listsActions.js","actions/cardsActions.js","actions/index.js","components/KanbanButton.js","components/KanbanForm.js","components/KanbanCard.js","components/KanbanActionButton.js","components/KanbanList.js","components/App.js","reducers/listsReducer.js","reducers/index.js","store/index.js","serviceWorker.js","index.js"],"names":["addList","title","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","droppableId","DRAG_HAPPENDED","PlaySound","url","audio","Audio","loop","play","console","log","deleteCardThunk","id","listID","dispatch","DELETE_CARD","deleteCard","editCardThunk","newText","EDIT_CARD","editCard","addCardThunk","text","getState","ADD_CARD","addCard","EDIT_LIST_TITLE","DELETE_LIST","StyledButton","styled","Button","_templateObject","TrelloButton","_ref","children","onClick","react_default","a","createElement","variant","onMouseDown","Container","div","KanbanForm_templateObject","StyledCard","Card","_templateObject2","StyledTextArea","Textarea","_templateObject3","ButtonContainer","_templateObject4","pulse","keyframes","_templateObject5","StyledIcon","Icon","_templateObject6","KanbanForm","React","memo","list","_ref$text","onChange","closeForm","placeholder","autoFocus","value","e","onBlur","CardContainer","KanbanCard_templateObject","EditButton","KanbanCard_templateObject2","DeleteButton","KanbanCard_templateObject3","ListenButton","KanbanCard_templateObject4","KanbanCard","index","_useState","useState","_useState2","Object","slicedToArray","isEditing","setIsEditing","_useState3","_useState4","cardText","setText","handleDeleteCard","handleChange","target","saveCard","preventDefault","components_KanbanForm","KanbanButton","react_beautiful_dnd_esm","draggableId","String","provided","assign","draggableProps","dragHandleProps","ref","innerRef","onDoubleClick","fontSize","CardContent","Typography","connect","KanbanActionButton_templateObject","KanbanActionButton_templateObject2","KanbanActionButton_templateObject3","KanbanActionButton_templateObject4","KanbanActionButton_templateObject5","KanbanActionButton_templateObject6","_templateObject7","KanbanActionButton","state","formOpen","openForm","_this","setState","handleInputChange","handleAddList","props","handleAddCard","_this$props","renderAddButton","buttonText","buttonTextOpacity","buttonTextColor","buttonTextBackground","OpenFormButton","_templateObject8","renderForm","buttonTitle","KanbanActionButton_Container","KanbanActionButton_StyledCard","KanbanActionButton_StyledTextArea","KanbanActionButton_StyledButton","KanbanActionButton_ButtonContainer","KanbanActionButton_StyledIcon","this","Component","ListContainer","KanbanList_templateObject","StyledInput","input","KanbanList_templateObject2","TitleContainer","KanbanList_templateObject3","KanbanList_templateObject4","ListTitle","h4","KanbanList_templateObject5","cards","listTitle","setListTitle","handleFocus","handleFinishEditing","newTitle","editTitle","handleDeleteList","deleteList","onSubmit","maxLength","onFocus","KanbanList_DeleteButton","droppableProps","map","card","components_KanbanCard","key","components_KanbanActionButton","ListsContainer","App_templateObject","App","onDragEnd","result","destination","source","lists","style","color","padding","textTransform","direction","components_KanbanList","ownProps","cardID","initialState","concat","listsReducer","arguments","length","undefined","action","newList","toConsumableArray","newCard","objectSpread","_action$payload","newCards","_action$payload2","filter","_action$payload3","newState","splice","apply","_list$cards","find","_listEnd$cards","_action$payload4","newListTitle","combineReducers","persistConfig","storage","persistedReducer","persistReducer","rootReducer","Boolean","window","location","hostname","match","store","createStore","applyMiddleware","thunk","persistor","persistStore","Store","ReactDOM","render","es","integration_react","loading","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cf6ff0ad.chunk.js","sourcesContent":["import  { CONSTANTS } from '.'\r\n\r\nexport const addList = (title) => {\r\n    return {\r\n        type: CONSTANTS.ADD_LIST,\r\n        payload: title\r\n    }\r\n}\r\n\r\nexport const sort = (\r\n    droppableIdStart,    \r\n    droppableIdEnd,    \r\n    droppableIndexStart,    \r\n    droppableIndexEnd,    \r\n    droppableId,\r\n    type    \r\n) => {\r\n    return {\r\n        type: CONSTANTS.DRAG_HAPPENDED,\r\n        payload:  {\r\n        droppableIdStart,    \r\n        droppableIdEnd,    \r\n        droppableIndexStart,    \r\n        droppableIndexEnd,    \r\n        droppableId,\r\n        type\r\n        }\r\n    }\r\n}\r\n\r\nexport const editTitle = (listID, newTitle) => {\r\n    return {\r\n      type: CONSTANTS.EDIT_LIST_TITLE,\r\n      payload: {\r\n        listID,\r\n        newTitle\r\n      }\r\n    };\r\n  };\r\n  \r\n  export const deleteList = listID => {\r\n    return (dispatch) => {\r\n      return dispatch({\r\n        type: CONSTANTS.DELETE_LIST,\r\n        payload: {\r\n          listID\r\n        }\r\n      });\r\n    };\r\n  };","// action creators for  cards\r\nimport  { CONSTANTS } from '.'\r\n\r\n// sound player func\r\nconst PlaySound = (url) => {\r\n    const audio = new Audio(url);\r\n    audio.loop = false;\r\n    audio.play(); \r\n    console.log('sound done (by Thunk)')\r\n    // yes i don't delete logs coz this is just a study orientated project - sorry\r\n}\r\n\r\nexport const addCard = (listID, text) => {\r\n    return {\r\n        type: CONSTANTS.ADD_CARD,\r\n        payload: {text, listID}\r\n    }\r\n};\r\n\r\nexport const deleteCard = (id, listID) => {\r\n    return {\r\n        type: CONSTANTS.DELETE_CARD,\r\n        payload: {id, listID}\r\n    }\r\n}\r\n\r\nexport const deleteCardThunk = (id, listID) =>  (dispatch) => {\r\n    dispatch(deleteCard(id, listID)); // dispatch normal action creater func\r\n    PlaySound('https://www.pacdv.com/sounds/preview/sound21.mp3'); // next action\r\n}\r\n\r\n\r\nexport const editCard = (id, listID, newText) => {\r\n    return {\r\n      type: CONSTANTS.EDIT_CARD,\r\n      payload: { id, listID, newText }\r\n    };\r\n    \r\n  };\r\n\r\n\r\n  export const editCardThunk = (id, listID, newText) => {\r\n      return (dispatch) => {\r\n          dispatch(editCard(id, listID, newText));\r\n  \r\n    PlaySound('https://freesound.org/data/previews/256/256113_3263906-lq.mp3'); \r\n    \r\n      }\r\n  }\r\n\r\n  // ok, i know, it might be redundant but i just want to practice thunk here\r\n  export const addCardThunk = (listID, text) => {\r\n      return (dispatch, getState) => {\r\n        dispatch(addCard(listID, text));\r\n        console.log('card added!');\r\n    \r\n        PlaySound('https://freesound.org/data/previews/263/263132_2064400-lq.mp3'); \r\n\r\n      }\r\n  }","export * from './listsActions';\r\nexport * from './cardsActions';\r\n\r\n\r\n\r\nexport const CONSTANTS = {\r\n    ADD_CARD: \"ADD_CARD\",\r\n    ADD_LIST: 'ADD_LIST',\r\n    DRAG_HAPPENDED: 'DRAG_HAPPENDED',\r\n    EDIT_CARD: \"EDIT_CARD\",\r\n    DELETE_CARD: \"DELETE_CARD\",\r\n    EDIT_LIST_TITLE: \"EDIT_LIST_TITLE\",\r\n    DELETE_LIST: \"DELETE_LIST\"\r\n}","// Save button for cards and lists editing\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst StyledButton = styled(Button)`\r\n  && {\r\n    color: white;\r\n    background: #5aac44;\r\n  }\r\n`;\r\n\r\nconst TrelloButton = ({ children, onClick }) => {\r\n  return (\r\n    <StyledButton variant=\"contained\" onMouseDown={onClick}>\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default TrelloButton;","// Component to render text EDITING form in cards\r\nimport React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Textarea from \"react-textarea-autosize\";\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nconst Container = styled.div`\r\n  width: 284px;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  min-height: 85px;\r\n  padding: 6px 8px 2px;\r\n`;\r\n\r\nconst StyledTextArea = styled(Textarea)`\r\n  resize: none;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  outline: none;\r\n  border: none;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  margin-top: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 8px;\r\n`;\r\n\r\n\r\n\r\nconst pulse = keyframes`\r\nfrom {\r\n  transform:rotate(0deg);\r\n}\r\nto {\r\n  transform:rotate(360deg);\r\n}`;\r\n\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  margin-left: 8px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    animation-name: ${pulse};\r\n    animation-duration: 5000ms;\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear; \r\n  }\r\n`;\r\n\r\n\r\nconst KanbanForm = React.memo(\r\n  ({ list, text = \"\", onChange, closeForm, children }) => {\r\n    const placeholder = list\r\n      ? \"Enter list title\"\r\n      : \"Enter card title\";\r\n\r\n    return (\r\n      <Container>\r\n        <StyledCard>\r\n          <StyledTextArea\r\n            placeholder={placeholder}\r\n            autoFocus\r\n            value={text}\r\n            onChange={e => onChange(e)}\r\n            onBlur={closeForm}\r\n          />\r\n        </StyledCard>\r\n        <ButtonContainer>\r\n          {children}\r\n          <StyledIcon onMouseDown={closeForm}>close</StyledIcon>\r\n        </ButtonContainer>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default KanbanForm;","import React, { useState } from 'react';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport styled from \"styled-components\";\r\nimport {Draggable} from 'react-beautiful-dnd';\r\nimport { connect } from \"react-redux\";\r\nimport { deleteCardThunk, editCardThunk } from \"../actions\";\r\nimport KanbanButton from \"./KanbanButton\";\r\nimport KanbanForm from \"./KanbanForm\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst CardContainer = styled.div`\r\n  margin: 0 0 8px 0;\r\n  position: relative;\r\n  max-width: 100%;\r\n  word-wrap: break-word;\r\n`;\r\n\r\nconst EditButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 5px;\r\n  top: 5px;\r\n  opacity: 0.5;\r\n  ${CardContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\n\r\n\r\nconst DeleteButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 5px;\r\n  bottom: 3px;\r\n  opacity: 0.5;\r\n  ${CardContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\n\r\n\r\nconst ListenButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 5px;\r\n  bottom: 5px;\r\n  opacity: 0.5;\r\n  ${CardContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\n\r\n\r\nconst KanbanCard = React.memo(({text, listID, id, index, dispatch}) => {\r\n\r\n    // use hooks state to handle editing\r\n\r\n    // show form html if being edited(true)\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    // text local state\r\n    const [cardText, setText] = useState(text);\r\n\r\n\r\n\r\n\r\n  const handleDeleteCard = e => {\r\n    // delete card using AC func\r\n    dispatch(deleteCardThunk(id, listID));\r\n  }\r\n\r\n  const closeForm = e => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  // bind text field data changes to state\r\n  const handleChange = e => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n\r\n  const saveCard = e => {\r\n    e.preventDefault();\r\n    // save edited text and close the form\r\n    dispatch(editCardThunk(id, listID, cardText));\r\n    setIsEditing(false);\r\n  }; \r\n\r\n  // the render funcs\r\n\r\n  // render edit form and pass it event funcs as props\r\n  const renderEditForm = () => {\r\n    return (\r\n      <KanbanForm text={cardText} onChange={handleChange} closeForm={closeForm}>\r\n        <KanbanButton onClick={saveCard}>Save</KanbanButton>\r\n      </KanbanForm>\r\n    );\r\n  };\r\n\r\n  // render card func\r\n  const renderCard = () => {\r\n    return (\r\n      <Draggable draggableId={String(id)} index={index}>\r\n        {provided => (\r\n          <CardContainer\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n            onDoubleClick={() => setIsEditing(true)}\r\n          >\r\n            <Card>\r\n              <EditButton\r\n                onMouseDown={() => setIsEditing(true)}\r\n                fontSize=\"small\"\r\n              >\r\n                edit\r\n              </EditButton>\r\n              <ListenButton>\r\n                add\r\n                </ListenButton>\r\n              <DeleteButton fontSize=\"small\" onMouseDown={handleDeleteCard}>\r\n                delete\r\n              </DeleteButton>\r\n\r\n              <CardContent>\r\n                <Typography>{text}</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </CardContainer>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  };\r\n  // show/hide editable card logic\r\n  return isEditing ? renderEditForm() : renderCard();\r\n});\r\n\r\nexport default connect()(KanbanCard);","// The ADD button \r\nimport React, { Component} from 'react';\r\nimport Icon from '@material-ui/core/icon';\r\nimport Textarea from \"react-textarea-autosize\";\r\nimport styled, {keyframes} from \"styled-components\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { connect } from 'react-redux';\r\nimport { addList, addCardThunk } from '../actions';\r\n\r\n\r\n// styled component for Button\r\nconst StyledButton = styled(Button)`\r\n  && {\r\n    color: white;\r\n    background: #5aac44;\r\n    &&:hover{\r\n        background: blue;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n// styles for form\r\nconst Container = styled.div`\r\n  width: 284px;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  min-height: 85px;\r\n  padding: 6px 8px 2px;\r\n`;\r\n\r\nconst StyledTextArea = styled(Textarea)`\r\n  resize: none;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  outline: none;\r\n  border: none;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  margin-top: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 8px;\r\n`;\r\n\r\n\r\nconst pulse = keyframes`\r\nfrom {\r\n  transform:rotate(0deg);\r\n}\r\nto {\r\n  transform:rotate(360deg);\r\n}`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  margin-left: 8px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    animation-name: ${pulse};\r\n    animation-duration: 5000ms;\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear; \r\n  }\r\n`;\r\n\r\n\r\n\r\n\r\n\r\nclass KanbanActionButton extends Component {\r\n\r\n    // state to manage form\r\n    state = {\r\n        formOpen: false,\r\n        text: ''\r\n    }\r\n\r\n    // method to open form \r\n    openForm = () => {\r\n        this.setState({\r\n            formOpen: true\r\n        })\r\n    }\r\n\r\n    closeForm = e => {\r\n        this.setState({\r\n            formOpen: false\r\n        })\r\n    }\r\n    // track input value changes\r\n    handleInputChange = e => {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n\r\n    handleAddList = () => {\r\n        const dispatch = this.props.dispatch;\r\n        const text = this.state.text;\r\n\r\n        if (text) {\r\n            this.setState({\r\n                text: ''\r\n            });\r\n            dispatch(addList(text));\r\n        }\r\n\r\n        return;\r\n    }\r\n    \r\n\r\n    handleAddCard = () => {\r\n        const {dispatch, listID} = this.props;\r\n        const text = this.state.text;\r\n\r\n        if (text) {\r\n            this.setState({\r\n                text: ''\r\n            });\r\n            dispatch(addCardThunk(listID, text))\r\n        }\r\n\r\n        return;\r\n    }\r\n    \r\n\r\n\r\n    // subrender method / babel syntax using = / \r\n    renderAddButton = () => {\r\n        // decide what button type we're gonna render - pass List prop if list\r\n        const list = this.props.list;\r\n\r\n        // if have list in props received than true\r\n        const buttonText = list ? \"ADD NEW LiST\" : \"Add new card\";\r\n        const buttonTextOpacity = list ? 1 : 0.7;\r\n        const buttonTextColor = list ? \"white\" : \"inherit\";\r\n        const buttonTextBackground = list ? \"rgba(0,0,0,.2)\" : \"inherit\";\r\n\r\n        \r\n\r\n        const OpenFormButton = styled.div`\r\n        display: flex;\r\n        align-items: center;\r\n        cursor: pointer;\r\n        border-radius: 3px;\r\n        height: 36px;\r\n        margin-left: 8px;\r\n        width: 300px;\r\n        padding-left: 10px;\r\n        padding-right: 10px;\r\n        opacity: ${buttonTextOpacity};\r\n        color: ${buttonTextColor};\r\n        background-color: ${buttonTextBackground};\r\n      `;\r\n\r\n        return (\r\n                <OpenFormButton onClick={this.openForm}>\r\n                    <Icon>add</Icon>\r\n                    <p>{buttonText}</p>\r\n                </OpenFormButton>\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n    // another subrender method \r\n    renderForm = () => {\r\n        // check if it's for list\r\n        const list = this.props.list;\r\n        \r\n        const placeholder = list \r\n        ? 'Enter list name' \r\n        : 'Enter card name';\r\n\r\n        const buttonTitle = list ? 'Add List' : 'Add Card';\r\n\r\n\r\n        // return html to render\r\n        return (            \r\n        <Container>\r\n              <StyledCard>\r\n                <StyledTextArea\r\n                  placeholder={placeholder}\r\n                  autoFocus\r\n                  onBlur={this.closeForm}\r\n                  value={this.state.text}\r\n                  onChange={this.handleInputChange}\r\n                />\r\n              </StyledCard>\r\n              <StyledButton \r\n             variant=\"contained\"\r\n             onMouseDown={list ? this.handleAddList : this.handleAddCard}\r\n            // onMouseDown instead of onClick to prevent onBlur interception\r\n              >\r\n               {buttonTitle}\r\n               </StyledButton>\r\n              <ButtonContainer>\r\n                \r\n                <StyledIcon onClick={this.closeForm}>close</StyledIcon>\r\n              </ButtonContainer>\r\n            </Container>\r\n          )\r\n    }\r\n\r\n\r\n\r\n    // if form open then render form else render button (using render alike methods)\r\n    render () {\r\n        return this.state.formOpen ? this.renderForm() : this.renderAddButton();\r\n    }\r\n}\r\n\r\nexport default connect() (KanbanActionButton);","import React, { useState } from \"react\";\r\nimport KanbanCard from './KanbanCard';\r\nimport KanbanActionButton from './KanbanActionButton';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport styled from 'styled-components';\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { editTitle, deleteList } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nconst ListContainer = styled.div`\r\nbackground-color: grey;\r\nbackground: linear-gradient(45deg, rgba(145,232,79,1) 0%, rgba(0,128,128,1) 100%);\r\nborder-radius: 3px;\r\nwidth: 300px;\r\npadding: 15px 8px 25px 8px;\r\nheight: 100%;\r\nmargin: 0 10px 0 1px;\r\n`;\r\n\r\n\r\nconst StyledInput = styled.input`\r\n  width: 95%;\r\n  border: none;\r\n  outline-color: blue;\r\n  border-radius: 3px;\r\n  padding: 7px 5px;\r\n  margin: 10px 5px 15px 5px;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst DeleteButton = styled(Icon)`\r\n  cursor: pointer;\r\n  transition: opacity 0.3s ease-in-out;\r\n  opacity: 0.4;\r\n  margin-bottom: 15px;\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst ListTitle = styled.h4`\r\n  transition: background 0.3s ease-in;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  margin: 1px 5px 20px 5px;\r\n  &:hover {\r\n    background: #ccc;\r\n    padding: 0.5%;\r\n  }\r\n`;\r\n\r\nconst KanbanList = ({title, cards, listID, index, dispatch}) => {\r\n    \r\n    // handle list editing with hooks comps states\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [listTitle, setListTitle] = useState(title);\r\n\r\n    // the render func for edit feature\r\n    const renderEditInput = () => {\r\n        return (\r\n          <form onSubmit={handleFinishEditing}>\r\n            <StyledInput\r\n              type=\"text\"\r\n              maxLength=\"45\"\r\n              value={listTitle}\r\n              onChange={handleChange}\r\n              autoFocus\r\n              onFocus={handleFocus}\r\n              onBlur={handleFinishEditing}\r\n              \r\n            />\r\n          </form>\r\n        );\r\n      };\r\n\r\n      // select input text by focus (halted for now)\r\n      const handleFocus = e => {\r\n        // e.target.select();\r\n      };\r\n\r\n      // save changes to state after every input change\r\n      const handleChange = e => {\r\n        e.preventDefault();\r\n        setListTitle(e.target.value);\r\n      };\r\n      \r\n      // save changes\r\n      const handleFinishEditing = e => {\r\n        setIsEditing(false); // hide input\r\n        dispatch(editTitle(listID, listTitle));\r\n      };\r\n\r\n      // handle delete using listID from received props\r\n      const handleDeleteList = () => {\r\n        dispatch(deleteList(listID));\r\n      };\r\n\r\n\r\n    // functional component return  \r\n    return (\r\n        <Draggable draggableId={String(listID)} index={index}>\r\n            {provided => (\r\n                  <ListContainer\r\n                {...provided.draggableProps}\r\n                {...provided.dragHandleProps}\r\n                    ref={provided.innerRef}\r\n          >\r\n                 <Droppable droppableId={String(listID)} type='card'>\r\n                 {provided => (\r\n\r\n                <div>\r\n                `<div>\r\n                  {isEditing ? (\r\n                    renderEditInput()\r\n                  ) : (\r\n                    <TitleContainer>\r\n                      <ListTitle  onClick={() => setIsEditing(true)}>{listTitle}</ListTitle>\r\n                      <DeleteButton onClick={handleDeleteList}>\r\n                        delete\r\n                      </DeleteButton>\r\n                    </TitleContainer>\r\n                  )}\r\n                </div>\r\n\r\n                    <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                     \r\n                     {/* for each card in array add component */}\r\n                     {cards.map((card, index) => {\r\n                         return <KanbanCard \r\n                         key={card.id} index={index} \r\n                         text={card.text} id={card.id}\r\n                         listID={listID}\r\n                         />\r\n                     })}\r\n                     <KanbanActionButton listID={listID} />\r\n                    {/* provided.placeholder basically gives extra space to your <Droppable/> while a drag is occurring */}\r\n                     {provided.placeholder}\r\n                     </div>\r\n                     </div>\r\n                 )          \r\n                 }\r\n                 \r\n                \r\n                 </Droppable>\r\n                 </ListContainer>\r\n            )}\r\n        </Draggable>\r\n       \r\n    )\r\n}\r\n\r\n\r\n\r\nexport default connect()(KanbanList);","import React, {Component} from 'react';\nimport KanbanList from './KanbanList';\nimport { connect } from 'react-redux';\nimport KanbanActionButton from './KanbanActionButton';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { sort } from '../actions';\nimport styled from 'styled-components';\n\nconst ListsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n    marginRight: 8\n`;\n\nclass App extends Component {\n\n  onDragEnd = (result) => { \n    // destructuring for result obj properties\n    const {destination, source, draggableId, type } = result;\n    // console.log(result);\n    if(!destination) {\n      return;\n    }\n    // sort items\n    this.props.dispatch(\n      sort(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId,\n        type\n      ))\n    }\n\n\n  render() {\n\n    const lists = this.props.lists;\n\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <h3 style={{color: 'white', padding: '0 1%',\n    textTransform: 'uppercase'}}>KANBAN: add, edit, delete, listen (eng only) and drag&drop your cards.</h3>\n        <Droppable \n        droppableId='all-lists' \n        direction='horizontal' \n        type='list'>\n          {provided => (\n             <ListsContainer \n             {...provided.droppableProps} \n             ref={provided.innerRef}\n             >\n             {/* render lists with KanbanList comp using lists reducer's state (array of lists objects) */}\n             {lists.map((list, index) => (\n               <KanbanList \n               listID={list.id} \n               title={list.title} \n               key={list.id} \n               cards={list.cards}\n               index={index}\n               />\n               ))}\n               {provided.placeholder}\n               <KanbanActionButton list />\n            </ListsContainer>\n          )}\n        </Droppable>\n      </DragDropContext>\n    )\n  }\n}\n\n\n\nconst mapStateToProps = (state, ownProps) => { \n  return {\n  lists: state.lists\n\n  }\n  // tied up with \n//   export default combineReducers({\n//     lists: listsReducer\n// });\n};\nexport default connect(mapStateToProps) (App);\n","import { CONSTANTS } from '../actions/index'\r\n\r\nlet listID = 2;\r\nlet cardID = 6;\r\n\r\nconst initialState = [\r\n    {\r\n        title: '1st list / to do',\r\n        id: `list-${0}`,\r\n        cards: [\r\n            {\r\n                id: `card-${0}`,\r\n                text: '1st card / buy food (for example) / you can add some important info to the card and save it. Then move it to other list when needed' \r\n            },\r\n            {\r\n                id: `card-${1}`,\r\n                text: '2nd card (feed the tiger for instance)' \r\n            }\r\n        ]\r\n    },\r\n    \r\n     {\r\n        title: '2nd dummy list / done',\r\n        id: `list-${1}`,\r\n        cards: [\r\n            {\r\n                id: `card-${2}`,\r\n                text: '1st card / do something useless' \r\n            },\r\n            {\r\n                id: `card-${3}`,\r\n                text: 'another 2nd card' \r\n            }\r\n            ,\r\n            {\r\n                id: `card-${4}`,\r\n                text: 'watch youtube videos' \r\n            }\r\n        ]\r\n    }\r\n   \r\n]\r\n\r\n\r\n\r\n\r\nconst listsReducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n\r\n        \r\n        case CONSTANTS.ADD_LIST: \r\n        const newList = {\r\n            title: action.payload,\r\n            cards: [],\r\n            id: `list-${listID}`\r\n        }\r\n\r\n        listID += 1;\r\n\r\n        return [...state,\r\n            newList\r\n        ];\r\n\r\n\r\n\r\n\r\n\r\n        case CONSTANTS.ADD_CARD: \r\n          \r\n\r\n            // adding braces to fix newState var duplicatiton\r\n            {const newCard = {\r\n                text: action.payload.text,\r\n                id: `card-${cardID}`\r\n            }\r\n\r\n            cardID += 1;\r\n            const newState = state.map(list => {\r\n                if(list.id === action.payload.listID) {\r\n                    return  {\r\n                        ...list,\r\n                        cards: [...list.cards, newCard]\r\n                    }\r\n                }\r\n                else {\r\n                    return list\r\n                }  \r\n            })\r\n\r\n            return newState;};\r\n\r\n\r\n\r\n\r\n\r\n            case CONSTANTS.EDIT_CARD: {\r\n                const { id, listID, newText } = action.payload;\r\n                return state.map(list => {\r\n                  if (list.id === listID) {\r\n                    const newCards = list.cards.map(card => {\r\n                      if (card.id === id) {\r\n                        card.text = newText;\r\n                        return card;\r\n                      }\r\n                      return card;\r\n                    });\r\n                    return { ...list, cards: newCards };\r\n                  }\r\n                  return list;\r\n                });\r\n              };\r\n          \r\n\r\n\r\n\r\n              case CONSTANTS.DELETE_CARD: {\r\n               \r\n\r\n                  // extract payload data\r\n                const { id, listID } = action.payload;\r\n                // map our state\r\n                return state.map(list => {\r\n                    // if list matches\r\n                  if (list.id === listID) {\r\n                      // filter cards and return new list\r\n                      // eventually we return new array state by map\r\n                      console.log('list deletion'                      )\r\n                    const newCards = list.cards.filter(card => card.id !== id);\r\n                    return { ...list, cards: newCards };\r\n                  } else {\r\n                    return list;\r\n                  }\r\n                });\r\n              }\r\n          \r\n\r\n\r\n\r\n\r\n        case CONSTANTS.DRAG_HAPPENDED:\r\n        \r\n        const {\r\n            droppableIdStart,\r\n            droppableIdEnd,\r\n            droppableIndexEnd,\r\n            droppableIndexStart,\r\n            draggableId,\r\n            type\r\n            \r\n        } = action.payload;\r\n\r\n        const newState = [...state];\r\n\r\n       // draggin lists around\r\n       if (type === \"list\") {\r\n        const list = newState.splice(droppableIndexStart, 1);\r\n        newState.splice(droppableIndexEnd, 0, ...list);\r\n        return newState;\r\n      }\r\n\r\n       // If the same list\r\n      if (droppableIdStart === droppableIdEnd) {\r\n        const list = state.find(list => droppableIdStart === list.id);\r\n        const card = list.cards.splice(droppableIndexStart, 1);\r\n        list.cards.splice(droppableIndexEnd, 0, ...card);\r\n      }\r\n\r\n          // if dropped to other list\r\n          if (droppableIdStart !== droppableIdEnd) {\r\n            // find the list where the drag happened\r\n            const listStart = state.find(list => droppableIdStart === list.id);\r\n            // pull out the card from this list\r\n            const card = listStart.cards.splice(droppableIndexStart, 1);\r\n            // find the list where the drag ended\r\n            const listEnd = state.find(list => droppableIdEnd === list.id);\r\n    \r\n            // put the card in the new list\r\n            listEnd.cards.splice(droppableIndexEnd, 0, ...card);\r\n          }\r\n    \r\n          return newState;      \r\n\r\n\r\n\r\n          case CONSTANTS.EDIT_LIST_TITLE: {\r\n            const { listID, newListTitle } = action.payload;\r\n            // return new state (array)\r\n            return state.map(list => {\r\n                // find list by id\r\n              if (list.id === listID) {\r\n                // rewrite title in matched lists\r\n                list.title = newListTitle;\r\n                return list;\r\n              } else {\r\n                return list;\r\n              }\r\n            });\r\n          }\r\n      \r\n\r\n\r\n\r\n          case CONSTANTS.DELETE_LIST: {\r\n            const { listID } = action.payload;\r\n            // filter out lists that pass condition\r\n            return state.filter(list => list.id !== listID);\r\n          }\r\n      \r\n       \r\n\r\n        default: return state;\r\n\r\n    }\r\n}\r\n\r\nexport default listsReducer","\r\nimport { combineReducers } from \"redux\";\r\nimport listsReducer from \"./listsReducer\";\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    lists: listsReducer\r\n});","import {createStore, applyMiddleware} from 'redux';\r\nimport rootReducer from \"../reducers/index\";\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n\r\n\r\n//if you get confused, below is just redux-persist basic integration logic for local storage persistance\r\n// https://github.com/rt2zz/redux-persist#basic-usage\r\n\r\n// config for persistReducer\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage\r\n};\r\n\r\n//returns an enhanced NEW reducer\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n\r\nexport default () => {\r\n  // creating a standart redux store with enhanced reducer\r\n  let store = createStore(persistedReducer, applyMiddleware(thunk));\r\n\r\n  // returns persistor object based on store\r\n  let persistor = persistStore(store);\r\n  // destructuring variables\r\n  return { store, persistor };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// import {createStore, applyMiddleware} from 'redux';\r\n// import rootReducer from \"../reducers/index\";\r\n// import thunk from 'redux-thunk';\r\n\r\n\r\n\r\n// const store = createStore(rootReducer,  applyMiddleware(thunk));\r\n\r\n\r\n// if(process.env.NODE_ENV !== 'production') {\r\n//    window.store = store;\r\n//  }\r\n// //  store.getState();\r\n\r\n// export default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport {Provider} from 'react-redux';\nimport Store from './store';\nimport * as serviceWorker from './serviceWorker';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\n\nconst { persistor, store } = Store();\n// console.log(perstistor);\nReactDOM.render(\n<Provider store={store}>\n  {/* redux-persist wrapper */}\n  <PersistGate loading={null} persistor={persistor}>\n  <App />\n  </PersistGate>\n </Provider>, document.getElementById('root')\n );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}